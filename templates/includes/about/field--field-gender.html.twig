{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
set classes = [
'field',
'field--name-' ~ field_name|clean_class,
'field--type-' ~ field_type|clean_class,
'field--label-' ~ label_display,
]
%}
{%
set title_classes = [
'field__label',
label_display == 'visually_hidden' ? 'visually-hidden',
]
%}

{% if label_hidden %}
  {% if multiple %}

    <div{{ attributes.addClass(classes, 'field__items', 'bars-container') }}>





      {% for item in items %}
        {% if loop.first %}
          {#<div{{ item.attributes.addClass('field__item', 'barWrapper') }}>#}
          <div class="barWrapper" style="width: {{ item.content }}" >
            <div class="progressText">
              <span class="progressText1 large-text"><B>{{ item.content }}</B></span>
              <span class="progressText2 v3 extra-space"><B>MALE</B></span>
            </div>

            <div class="progress">
              <div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                <span class="popOver" data-toggle="tooltip" data-placement="bottom" title="" style="margin-top:20px"></span>
              </div>
            </div>
          </div>
        {% else %}
          <div class="barWrapper bar2" style="width: {{ item.content }}" >
            <div class="progressText">
              <span class="progressText1 large-text"><B>{{ item.content }}</B></span>
              <span class="progressText2 v3 extra-space"><B>FEMALE</B></span>
            </div>
            <div class="progress ">
              <div class="progress-bar  color-2" role="progressbar" aria-valuenow="100" aria-valuemin="100" aria-valuemax="100" style="">
                <span class="popOver" data-toggle="tooltip" data-placement="bottom" title=""></span>
              </div>

            </div>
          </div>
        {% endif %}
        {#</div>#}
      {% endfor %}
    </div>
  {% else %}
    {#single one - not going to be used#}
    {% for item in items %}
      <div{{ attributes.addClass(classes, 'field__item') }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes.addClass(classes) }}>
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
    <div class="field__items">
      {% endif %}
      {% for item in items %}
        <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
      {% endfor %}
      {% if multiple %}
    </div>
    {% endif %}
  </div>
{% endif %}
